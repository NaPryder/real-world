version: '3'

services:

  db:
    image: mysql:8.0.31
    container_name: mysql-db
    restart: always
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQLDB_DATABASE}
    ports:
      - ${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - realworld_network
  

  adminer:
    depends_on:
      - db
    image: adminer:4.8.1
    container_name: db-adminer
    restart: always
    env_file: ./.env
    environment:
      - ADMINER_DEFAULT_SERVER=db
    ports:
      - ${ADMINER_LOCAL_PORT}:{ADMINER_DOCKER_PORT}
    networks:
      - realworld_network
    

  express_app:
    depends_on:
      - db
    build: 
      dockerfile: ./dockerfile
      context: .
      target: backend
    restart: always
    env_file: ./.env
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    environment:
      - DB_HOST=localhost
      - DB_USER=${MYSQLDB_USER}
      - DB_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - DB_NAME=${MYSQLDB_DATABASE}
      - DB_PORT=${MYSQLDB_DOCKER_PORT}
      - SALT_ROUNDS=${SALT_ROUNDS}
      - SECRET_TOKEN=${SECRET_TOKEN}
    stdin_open: true
    try: true


networks:
  realworld_network:

volumes:
  db_data: